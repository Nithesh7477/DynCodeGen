//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynCodeGen.CodeGeneration.Controller {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TemplateAttribute {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TemplateAttribute() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DynCodeGen.CodeGeneration.Controller.TemplateAttribute", typeof(TemplateAttribute).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sln {apiPath}/{apiName}.sln add {apiPath}/{apiName}.Application/{apiName}.Application.csproj.
        /// </summary>
        public static string AddApplicationProject {
            get {
                return ResourceManager.GetString("AddApplicationProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Application/{apiName}.Application.csproj reference {apiPath}/{apiName}.Domain/{apiName}.Domain.csproj.
        /// </summary>
        public static string AddApplicationReferringDomain {
            get {
                return ResourceManager.GetString("AddApplicationReferringDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj package Microsoft.AspNetCore.Hosting.
        /// </summary>
        public static string AddAspNetCoreHostingPackage {
            get {
                return ResourceManager.GetString("AddAspNetCoreHostingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj package Microsoft.Extensions.Configuration.Abstractions --version 8.0.0.
        /// </summary>
        public static string AddConfigPackage {
            get {
                return ResourceManager.GetString("AddConfigPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj package Microsoft.EntityFrameworkCore.Design --version 7.0.11.
        /// </summary>
        public static string AddDesignPackage {
            get {
                return ResourceManager.GetString("AddDesignPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sln {apiPath}/{apiName}.sln add {apiPath}/{apiName}.Domain/{apiName}.Domain.csproj.
        /// </summary>
        public static string AddDomainProject {
            get {
                return ResourceManager.GetString("AddDomainProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tool install --global dotnet-ef.
        /// </summary>
        public static string AdddotnetefPackage {
            get {
                return ResourceManager.GetString("AdddotnetefPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj package Microsoft.Extensions.Hosting.
        /// </summary>
        public static string AddExtensionsHostingPackage {
            get {
                return ResourceManager.GetString("AddExtensionsHostingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sln {apiPath}/{apiName}.sln add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj.
        /// </summary>
        public static string AddInfrastructureProject {
            get {
                return ResourceManager.GetString("AddInfrastructureProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj reference {apiPath}/{apiName}.Application/{apiName}.Application.csproj.
        /// </summary>
        public static string AddInfrastructureReferringApplication {
            get {
                return ResourceManager.GetString("AddInfrastructureReferringApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj reference {apiPath}/{apiName}.Domain/{apiName}.Domain.csproj.
        /// </summary>
        public static string AddInfrastructureReferringDomain {
            get {
                return ResourceManager.GetString("AddInfrastructureReferringDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj package Microsoft.Extensions.Options --version 8.0.0.
        /// </summary>
        public static string AddOptionsPackage {
            get {
                return ResourceManager.GetString("AddOptionsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj package Microsoft.Data.SqlClient --version 5.1.2.
        /// </summary>
        public static string AddSqlClientPackage {
            get {
                return ResourceManager.GetString("AddSqlClientPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj package Microsoft.EntityFrameworkCore.SqlServer --version 7.0.11.
        /// </summary>
        public static string AddSqlServerPackage {
            get {
                return ResourceManager.GetString("AddSqlServerPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj package Microsoft.EntityFrameworkCore.Tools --version 7.0.11.
        /// </summary>
        public static string AddToolsPackage {
            get {
                return ResourceManager.GetString("AddToolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sln {apiPath}/{apiName}.sln add {apiPath}/{apiName}.WebAPI/{apiName}.csproj.
        /// </summary>
        public static string AddWebAPIProject {
            get {
                return ResourceManager.GetString("AddWebAPIProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj reference {apiPath}/{apiName}.Application/{apiName}.Application.csproj.
        /// </summary>
        public static string AddWebAPIReferringApplication {
            get {
                return ResourceManager.GetString("AddWebAPIReferringApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add {apiPath}/{apiName}.WebAPI/{apiName}.csproj reference {apiPath}/{apiName}.Infrastructure/{apiName}.Infrastructure.csproj.
        /// </summary>
        public static string AddWebAPIReferringInfrastructure {
            get {
                return ResourceManager.GetString("AddWebAPIReferringInfrastructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Infrastructure.Repository\r\n{\r\n    using Microsoft.Extensions.Configuration;\r\n\r\n    /// &lt;summary&gt;\r\n    /// BaseRepository.\r\n    /// &lt;/summary&gt;\r\n    public class BaseRepository\r\n    {\r\n        private readonly IConfiguration config;\r\n\r\n        /// &lt;summary&gt;\r\n        /// Initializes a new instance of the &lt;see cref=\&quot;BaseRepository\&quot;/&gt; class.\r\n        /// BaseRepository.\r\n        /// &lt;/summary&gt;\r\n        /// &lt;param name=\&quot;config\&quot;&gt;config.&lt;/param&gt;\r\n        publi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BaseRepository {
            get {
                return ResourceManager.GetString("BaseRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\r\n\r\n\t\t[HttpPost(\&quot;Add\&quot;)]\r\n\t\tpublic IActionResult Add([FromBody] {className} entity)\r\n\t\t{\r\n\t\t\t_service.Add(entity);\r\n\t\t\treturn CreatedAtAction(nameof(GetById), new { {IdName} = entity.{IdName}}, entity);\r\n\t\t}.
        /// </summary>
        public static string ContollerAdd {
            get {
                return ResourceManager.GetString("ContollerAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t[ApiController]\r\n\t[Route(\&quot;api/[controller]\&quot;)]\r\n\tpublic class {className}Controller : ControllerBase\r\n\t{\r\n\t\tprivate readonly I{className}Service _service;\r\n\r\n\t\tpublic {className}Controller(I{className}Service service)\r\n\t\t{\r\n\t\t_service = service;\r\n\t\t}.
        /// </summary>
        public static string ContollerClass {
            get {
                return ResourceManager.GetString("ContollerClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t}.
        /// </summary>
        public static string ContollerClassEnd {
            get {
                return ResourceManager.GetString("ContollerClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\r\n\r\n\t\t[HttpDelete(\&quot;Delete/{{IdName}}\&quot;)]\r\n\t\tpublic IActionResult Delete(int {IdName})\r\n\t\t{\r\n\t\t\tvar existingItem = _service.GetById({IdName});\r\n\t\t\tif (existingItem == null)\r\n\t\t\t{\r\n\t\t\t\treturn NotFound();\r\n\t\t\t}\r\n\t\t\t_service.Delete({IdName});\r\n\t\t\treturn NoContent();\r\n\t\t}.
        /// </summary>
        public static string ContollerDelete {
            get {
                return ResourceManager.GetString("ContollerDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\r\n\r\n\t\t[HttpGet(\&quot;GetById/{{IdName}}\&quot;)]\r\n\t\tpublic ActionResult&lt;{className}&gt; GetById(int {IdName})\r\n\t\t{\r\n\t\t\tvar item = _service.GetById({IdName});\r\n\t\t\tif (item == null)\r\n\t\t\t{\r\n\t\t\t\treturn NotFound();\r\n\t\t\t}\r\n\t\t\treturn Ok(item);\r\n\t\t}.
        /// </summary>
        public static string ContollerGet {
            get {
                return ResourceManager.GetString("ContollerGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\r\n\r\n\t\t[HttpGet(\&quot;GetAll\&quot;)]\r\n\t\tpublic ActionResult&lt;IEnumerable&lt;{className}&gt;&gt; GetAll()\r\n\t\t{\r\n\t\t\treturn Ok(_service.GetAll());\r\n\t\t}.
        /// </summary>
        public static string ContollerGetAll {
            get {
                return ResourceManager.GetString("ContollerGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNetCore.Mvc;\r\nusing {apiName}.Application.IService;\r\nusing System.Collections.Generic;\r\n.
        /// </summary>
        public static string ContollerHeader {
            get {
                return ResourceManager.GetString("ContollerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Api.Controllers\r\n{.
        /// </summary>
        public static string ContollerNamespace {
            get {
                return ResourceManager.GetString("ContollerNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n}.
        /// </summary>
        public static string ContollerNamespaceEnd {
            get {
                return ResourceManager.GetString("ContollerNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t[ApiController]\r\n\t[Route(\&quot;api/[controller]\&quot;)]\r\n\tpublic class {className}Controller : ControllerBase\r\n\t{\r\n\t\tprivate readonly I{className}Service _service;\r\n\r\n\t\tpublic {className}Controller(I{className}Service service)\r\n\t\t{\r\n\t\t_service = service;\r\n\t\t}.
        /// </summary>
        public static string ContollerSPClass {
            get {
                return ResourceManager.GetString("ContollerSPClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\r\n\t\t[HttpPut(\&quot;Update/{{IdName}}\&quot;)]\r\n\t\tpublic IActionResult Update(int {IdName}, [FromBody] {className} entity)\r\n\t\t{\r\n\t\t\tif ({IdName} != entity.{IdName})\r\n\t\t\t{\r\n\t\t\t\treturn BadRequest();\r\n\t\t\t}\r\n\t\t\t_service.Update(entity);\r\n\t\t\treturn NoContent();\r\n\t\t}.
        /// </summary>
        public static string ContollerUpdate {
            get {
                return ResourceManager.GetString("ContollerUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t[HttpPost(\&quot;Get{className}Async\&quot;)]\r\n\t\tpublic IActionResult Get{className}Async([FromBody] Request{className} {className})\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar Result = _service.Get{className}Async({className});\r\n\t\t\t\treturn Ok(Result);\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\t// Log the exception\r\n\t\t\t\treturn StatusCode(500, \&quot;An error occurred while processing your request.\&quot;);\r\n\t\t\t}\r\n\t\t}.
        /// </summary>
        public static string ControllerGetMethod {
            get {
                return ResourceManager.GetString("ControllerGetMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// Get\r\n\t\t// GetAll\r\n\t\t// Insert \r\n\t\t// Update\r\n\t\t// Delete\r\n.
        /// </summary>
        public static string ControllerMethodComments {
            get {
                return ResourceManager.GetString("ControllerMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t[HttpPost(\&quot;Post{className}Async\&quot;)]\r\n\t\tpublic IActionResult Post{className}Async([FromBody] Request{className} {className})\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar Result = _service.Post{className}Async({className});\r\n\t\t\t\treturn Ok(&quot;Recorde inserted/updated Successfully&quot;);\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\t// Log the exception\r\n\t\t\t\treturn StatusCode(500, \&quot;An error occurred while processing your request.\&quot;);\r\n\t\t\t}\r\n\t\t}.
        /// </summary>
        public static string ControllerPostMethod {
            get {
                return ResourceManager.GetString("ControllerPostMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t[HttpPost(\&quot;Post{className}Async\&quot;)]\r\n\t\tpublic IActionResult Post{className}Async([FromBody] Request{className} {className})\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar Result = _service.Post{className}Async({className});\r\n\t\t\t\tif(Result &gt; 0)\r\n\t\t\t\t{\r\n\t\t\t\treturn Ok(&quot;Record inserted/updated Successfully&quot;);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\treturn NotFound(&quot;Insertion Failed&quot;);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\t// Log the ex [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ControllerPostMethodAdo {
            get {
                return ResourceManager.GetString("ControllerPostMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// GET/GETALL\r\n\t\t// INSERT/UPDATE\r\n.
        /// </summary>
        public static string ControllerSPMethodComments {
            get {
                return ResourceManager.GetString("ControllerSPMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new classlib -n {apiName}.Application -o {apiPath}/{apiName}.Application.
        /// </summary>
        public static string CreateApplication {
            get {
                return ResourceManager.GetString("CreateApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new classlib -n {apiName}.Domain -o {apiPath}/{apiName}.Domain.
        /// </summary>
        public static string CreateDomain {
            get {
                return ResourceManager.GetString("CreateDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new classlib -n {apiName}.Infrastructure -o {apiPath}/{apiName}.Infrastructure.
        /// </summary>
        public static string CreateInfrastructure {
            get {
                return ResourceManager.GetString("CreateInfrastructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new sln -n {apiName} -o {apiPath}.
        /// </summary>
        public static string CreateSolution {
            get {
                return ResourceManager.GetString("CreateSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new webapi -n {apiName} -o {apiPath}\\{apiName}.WebAPI.
        /// </summary>
        public static string CreateWebAPI {
            get {
                return ResourceManager.GetString("CreateWebAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class ApplicationDbContext : DbContext\r\n\t{\r\n\t\tpublic ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt; options) : base(options)\r\n\t\t{\r\n}\r\n//DBSets go here\r\n\t}\r\n}.
        /// </summary>
        public static string DBcontextClass {
            get {
                return ResourceManager.GetString("DBcontextClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {namespaceName}.Data\r\n{\r\n.
        /// </summary>
        public static string DBcontextNamespace {
            get {
                return ResourceManager.GetString("DBcontextNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.EntityFrameworkCore;\r\n.
        /// </summary>
        public static string DBcontextUsing {
            get {
                return ResourceManager.GetString("DBcontextUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic DbSet&lt;{className}&gt; {className}Set { get; set; }\r\n.
        /// </summary>
        public static string DBContextWithModels {
            get {
                return ResourceManager.GetString("DBContextWithModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Add({className} entity);\r\n.
        /// </summary>
        public static string IRepositoryAdd {
            get {
                return ResourceManager.GetString("IRepositoryAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Delete(int {IdName});\r\n.
        /// </summary>
        public static string IRepositoryDelete {
            get {
                return ResourceManager.GetString("IRepositoryDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t{className} GetById(int {IdName});\r\n.
        /// </summary>
        public static string IRepositoryGet {
            get {
                return ResourceManager.GetString("IRepositoryGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\tIEnumerable&lt;{className}&gt; GetAll();\r\n.
        /// </summary>
        public static string IRepositoryGetAll {
            get {
                return ResourceManager.GetString("IRepositoryGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tList&lt;Response{className}&gt; Get{className}Async(Request{className} {className});.
        /// </summary>
        public static string IRepositoryGetMethod {
            get {
                return ResourceManager.GetString("IRepositoryGetMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic interface I{className}Repository\r\n\t{.
        /// </summary>
        public static string IRepositoryInterface {
            get {
                return ResourceManager.GetString("IRepositoryInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t}.
        /// </summary>
        public static string IRepositoryInterfaceEnd {
            get {
                return ResourceManager.GetString("IRepositoryInterfaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// Get\r\n\t\t// GetAll\r\n\t\t// Insert \r\n\t\t// Update\r\n\t\t// Delete\r\n.
        /// </summary>
        public static string IRepositoryMethodComments {
            get {
                return ResourceManager.GetString("IRepositoryMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Application.IRepository\r\n{.
        /// </summary>
        public static string IRepositoryNamespace {
            get {
                return ResourceManager.GetString("IRepositoryNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n}.
        /// </summary>
        public static string IRepositoryNamespaceEnd {
            get {
                return ResourceManager.GetString("IRepositoryNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tResponse{className} Post{className}Async(Request{className} {className});.
        /// </summary>
        public static string IRepositoryPostMethod {
            get {
                return ResourceManager.GetString("IRepositoryPostMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic interface I{className}Repository\r\n\t{\r\n.
        ///   Looks up a localized string similar to \tint Post{className}Async(Request{className} request);\r\n.
        /// </summary>
        public static string IRepositoryPostMethodAdo {
            get {
                return ResourceManager.GetString("IRepositoryPostMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic interface Iusp{className}Repository\r\n\t{\r\n.
        /// </summary>
        public static string IRepositorySPInterface {
            get {
                return ResourceManager.GetString("IRepositorySPInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// GET/GETALL\r\n\t\t// INSERT/UPDATE\r\n.
        /// </summary>
        public static string IRepositorySPMethodComments {
            get {
                return ResourceManager.GetString("IRepositorySPMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Update({className} entity);\r\n.
        /// </summary>
        public static string IRepositoryUpdate {
            get {
                return ResourceManager.GetString("IRepositoryUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Add({className} entity);\r\n.
        /// </summary>
        public static string IServiceAdd {
            get {
                return ResourceManager.GetString("IServiceAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t}.
        /// </summary>
        public static string IServiceClassEnd {
            get {
                return ResourceManager.GetString("IServiceClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Delete(int EmployeeId);\r\n.
        /// </summary>
        public static string IServiceDelete {
            get {
                return ResourceManager.GetString("IServiceDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t{className} GetById(int {IdName});\r\n.
        /// </summary>
        public static string IServiceGet {
            get {
                return ResourceManager.GetString("IServiceGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tIEnumerable&lt;{className}&gt; GetAll();\r\n.
        /// </summary>
        public static string IServiceGetAll {
            get {
                return ResourceManager.GetString("IServiceGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tList&lt;Response{className}&gt; Get{className}Async(Request{className} {className});.
        /// </summary>
        public static string IServiceGetMethod {
            get {
                return ResourceManager.GetString("IServiceGetMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic interface I{className}Service\r\n\t{\r\n.
        /// </summary>
        public static string IServiceInterface {
            get {
                return ResourceManager.GetString("IServiceInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// Get\r\n\t\t// GetAll\r\n\t\t// Insert \r\n\t\t// Update\r\n\t\t// Delete\r\n.
        /// </summary>
        public static string IServiceMethodComments {
            get {
                return ResourceManager.GetString("IServiceMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Application.IService\r\n{.
        /// </summary>
        public static string IServiceNamespace {
            get {
                return ResourceManager.GetString("IServiceNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n}.
        /// </summary>
        public static string IServiceNamespaceEnd {
            get {
                return ResourceManager.GetString("IServiceNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tResponse{className} Post{className}Async(Request{className} {className});.
        /// </summary>
        public static string IServicePostMethod {
            get {
                return ResourceManager.GetString("IServicePostMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tint Post{className}Async(Request{className} {className});.
        /// </summary>
        public static string IServicePostMethodAdo {
            get {
                return ResourceManager.GetString("IServicePostMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic interface Iusp{className}Service\r\n\t{\r\n.
        ///   Looks up a localized string similar to \tpublic interface I{className}Service\r\n\t{\r\n.
        /// </summary>
        public static string IServiceSPInterface {
            get {
                return ResourceManager.GetString("IServiceSPInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// GET/GETALL\r\n\t\t// INSERT/UPDATE\r\n.
        /// </summary>
        public static string IServiceSPMethodComments {
            get {
                return ResourceManager.GetString("IServiceSPMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tvoid Update({className} entity);\r\n.
        /// </summary>
        public static string IServiceUpdate {
            get {
                return ResourceManager.GetString("IServiceUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t[{annotation}].
        /// </summary>
        public static string ModelAnnotation {
            get {
                return ResourceManager.GetString("ModelAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }.
        /// </summary>
        public static string ModelClassEnd {
            get {
                return ResourceManager.GetString("ModelClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic {propertyType} {propertyName} { get; set;}\r\n.
        /// </summary>
        public static string ModelClassProperty {
            get {
                return ResourceManager.GetString("ModelClassProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class {className} \r\n{\r\n\t.
        /// </summary>
        public static string ModelClassStart {
            get {
                return ResourceManager.GetString("ModelClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t[Key]\r\n.
        /// </summary>
        public static string ModelClassStartKey {
            get {
                return ResourceManager.GetString("ModelClassStartKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\tpublic string result { get; set; }\r\n.
        /// </summary>
        public static string ModelClassStartKeyProperty {
            get {
                return ResourceManager.GetString("ModelClassStartKeyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tvirtual ICollection&lt;{propertyType}&gt;.
        /// </summary>
        public static string ModelOnetomany {
            get {
                return ResourceManager.GetString("ModelOnetomany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.ComponentModel.DataAnnotations;\r\nusing System.ComponentModel.DataAnnotations.Schema;\r\n.
        /// </summary>
        public static string ModelUsing {
            get {
                return ResourceManager.GetString("ModelUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t}\r\n.
        /// </summary>
        public static string ProgramClassEnd {
            get {
                return ResourceManager.GetString("ProgramClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class Program\r\n\t{\r\n.
        /// </summary>
        public static string ProgramClassStart {
            get {
                return ResourceManager.GetString("ProgramClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic static IHostBuilder CreateHostBuilder(string[] args) =&gt;\r\n\t\t\tHost.CreateDefaultBuilder(args)\r\n\t\t\t\t.ConfigureWebHostDefaults(webBuilder =&gt;\r\n\t\t\t\t{\r\n\t\t\t\t\twebBuilder.UseStartup&lt;Startup&gt;();\r\n\t\t\t\t});\r\n.
        /// </summary>
        public static string ProgramCreateHostBuilderMethod {
            get {
                return ResourceManager.GetString("ProgramCreateHostBuilderMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic static void Main(string[] args)\r\n\t\t{\r\n\t\t\tCreateHostBuilder(args).Build().Run();\r\n\t\t}\r\n.
        /// </summary>
        public static string ProgramMainMethod {
            get {
                return ResourceManager.GetString("ProgramMainMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.WebAPI\r\n{.
        /// </summary>
        public static string ProgramNamespace {
            get {
                return ResourceManager.GetString("ProgramNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }\r\n.
        /// </summary>
        public static string ProgramNamespaceEnd {
            get {
                return ResourceManager.GetString("ProgramNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Hosting;.
        /// </summary>
        public static string ProgramUsing {
            get {
                return ResourceManager.GetString("ProgramUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Add({className} entity)\r\n\t\t{\r\n\t\t\t_context.{className}Set.Add(entity);\r\n\t\t\t_context.SaveChanges();\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryAdd {
            get {
                return ResourceManager.GetString("RepositoryAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t}\r\n.
        /// </summary>
        public static string RepositoryClassEnd {
            get {
                return ResourceManager.GetString("RepositoryClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class {className}Repository : I{className}Repository\r\n\t{\r\n.
        /// </summary>
        public static string RepositoryClassStart {
            get {
                return ResourceManager.GetString("RepositoryClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class usp{className}Repository : BaseRepository, Iusp{className}Repository\r\n\t{\r\n.
        /// </summary>
        public static string RepositoryClassStartAdo {
            get {
                return ResourceManager.GetString("RepositoryClassStartAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\tprivate readonly ApplicationDbContext _context;\r\n\r\n\t\tpublic {className}Repository(ApplicationDbContext context)\r\n\t\t{\r\n\t\t\t_context = context;\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryConstructor {
            get {
                return ResourceManager.GetString("RepositoryConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private readonly IOptions&lt;ConnectionStrings&gt; options;\r\n\t\r\n\tpublic usp{className}Repository(IConfiguration config, IOptions&lt;ConnectionStrings&gt; options)\r\n\t: base(config)\r\n\t{\r\n\t\tthis.options = options;\r\n\t\tSqlHelper.SetConnectionString(this.options.Value.DefaultConnection);\r\n\t}\r\n.
        /// </summary>
        public static string RepositoryConstructorAdo {
            get {
                return ResourceManager.GetString("RepositoryConstructorAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Delete(int {className}Id)\r\n\t\t{\r\n\t\t\tvar entityToDelete = _context.{className}Set.FirstOrDefault(e =&gt; e.{IdName} == {IdName});\r\n\t\t\tif (entityToDelete != null)\r\n\t\t\t{\r\n\t\t\t\t_context.{className}Set.Remove(entityToDelete);\r\n\t\t\t\t_context.SaveChanges();\r\n\t\t\t}\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryDelete {
            get {
                return ResourceManager.GetString("RepositoryDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic IEnumerable&lt;{className}&gt; GetAll()\r\n\t\t{\r\n\t\t\treturn _context.{className}Set.ToList();\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryGetAll {
            get {
                return ResourceManager.GetString("RepositoryGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic {className} GetById(int {IdName})\r\n\t\t{\r\n\t\t\treturn _context.{className}Set.FirstOrDefault(e =&gt; e.{IdName} == {IdName});\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryGetById {
            get {
                return ResourceManager.GetString("RepositoryGetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic  List&lt;Response{className}&gt; Get{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\t// Input\r\n\r\n\t\t\treturn  _context.{className}Set.FromSqlRaw(\&quot;{Execute Statement}\&quot;,{Parameters}).AsEnumerable().ToList();\r\n\t\t}.
        /// </summary>
        public static string RepositoryGetMethod {
            get {
                return ResourceManager.GetString("RepositoryGetMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tDataTable dt = SqlHelper.ExecuteSelect&lt;SqlConnection&gt;(&quot;{className}&quot;, parameters, SqlHelper.ExecutionType.Procedure);\r\n\t\tif (dt != null &amp;&amp; dt.Rows.Count &gt; 0)\r\n\t\t{\r\n\t\t\t\t{className}Param = SqlHelper.ConvertDataTableToList&lt;Response{className}&gt;(dt)[0];\r\n\t\t}\r\n\t\treturn {className}Param;\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryGetMethodEndAdo {
            get {
                return ResourceManager.GetString("RepositoryGetMethodEndAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tparameters.Add(new SqlParameter { ParameterName = &quot;@{parameterName}&quot;, Value = {className}.{parameterName}, SqlDbType = SqlDbType.{parameterType}, Direction = ParameterDirection.Input });\r\n\t.
        /// </summary>
        public static string RepositoryGetMethodMiddleAdo {
            get {
                return ResourceManager.GetString("RepositoryGetMethodMiddleAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic Response{className} Get{className}Async({Request}{classNameInput} {classNameInput})\r\n\t\t{\r\n\t\t\tResponse{className} {className}Param = new Response{className}();\r\n\t\t\tList&lt;DbParameter&gt; parameters = new List&lt;DbParameter&gt;();\r\n\t\t.
        /// </summary>
        public static string RepositoryGetMethodStartAdo {
            get {
                return ResourceManager.GetString("RepositoryGetMethodStartAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// Get\r\n\t\t// GetAll\r\n\t\t// Insert \r\n\t\t// Update\r\n\t\t// Delete\r\n.
        /// </summary>
        public static string RepositoryMethodComments {
            get {
                return ResourceManager.GetString("RepositoryMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Infrastructure.Repository\r\n{.
        /// </summary>
        public static string RepositoryNamespace {
            get {
                return ResourceManager.GetString("RepositoryNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }\r\n.
        /// </summary>
        public static string RepositoryNamespaceEnd {
            get {
                return ResourceManager.GetString("RepositoryNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic Response{className} Post{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\t\t// Input\r\n\t\t\t\treturn _context.{className}Set.FromSqlRaw(\&quot;{Execute Statement}\&quot;,{Parameters}).AsEnumerable().FirstOrDefault();\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryPostMethod {
            get {
                return ResourceManager.GetString("RepositoryPostMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public int Post{methodName}(List&lt;{parameterType}&gt; {parameterName})\r\n\t{\r\n\t\tint insertRowsCount = 0;\r\n\t\t//... Further implementation for POST ...\r\n\t\treturn insertRowsCount;\r\n\t}\r\n.
        /// </summary>
        public static string RepositoryPostMethodAdo {
            get {
                return ResourceManager.GetString("RepositoryPostMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tDictionary&lt;string, dynamic&gt; result = SqlHelper.ExecuteNonQuery&lt;SqlConnection&gt;(&quot;{className}&quot;, parameters, SqlHelper.ExecutionType.Procedure);\r\n\t\tinsertRowsCount = insertRowsCount + result[&quot;RowsAffected&quot;];\r\n\t\treturn insertRowsCount;\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryPostMethodEndAdo {
            get {
                return ResourceManager.GetString("RepositoryPostMethodEndAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tparameters.Add(new SqlParameter { ParameterName = &quot;@{parameterName}&quot;, Value = {className}.{parameterName}, SqlDbType = SqlDbType.{parameterType}, Direction = ParameterDirection.Input });\r\n\t.
        /// </summary>
        public static string RepositoryPostMethodMiddleAdo {
            get {
                return ResourceManager.GetString("RepositoryPostMethodMiddleAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic int Post{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\tint insertRowsCount = 0;\r\n\t\t\tList&lt;DbParameter&gt; parameters = new List&lt;DbParameter&gt;();\r\n\t\t.
        /// </summary>
        public static string RepositoryPostMethodStartAdo {
            get {
                return ResourceManager.GetString("RepositoryPostMethodStartAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class usp{className}Repository : Iusp{className}Repository\r\n\t{\r\n.
        ///   Looks up a localized string similar to \tpublic class {className}Repository : I{className}Repository\r\n\t{\r\n.
        /// </summary>
        public static string RepositorySPClassStart {
            get {
                return ResourceManager.GetString("RepositorySPClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\tprivate readonly ApplicationDbContext _context;\r\n\r\n\t\tpublic {className}Repository(ApplicationDbContext context)\r\n\t\t{\r\n\t\t\t_context = context;\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositorySPConstructor {
            get {
                return ResourceManager.GetString("RepositorySPConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// GET/GETALL\r\n\t\t// INSERT/UPDATE\r\n.
        /// </summary>
        public static string RepositorySPMethodComments {
            get {
                return ResourceManager.GetString("RepositorySPMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Update({className} entity)\r\n\t\t{\r\n\t\t\t_context.{className}Set.Update(entity);\r\n\t\t\t_context.SaveChanges();\r\n\t\t}\r\n.
        /// </summary>
        public static string RepositoryUpdate {
            get {
                return ResourceManager.GetString("RepositoryUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {apiName}.Infrastructure.Data;\r\nusing {apiName}.Application.IRepository;\r\nusing Microsoft.Data.SqlClient;\r\nusing Microsoft.EntityFrameworkCore;.
        /// </summary>
        public static string RepositoryUsing {
            get {
                return ResourceManager.GetString("RepositoryUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {apiName}.Infrastructure.DataAccess;\r\nusing {apiName}.Application.IRepository;\r\nusing System.Data;\r\nusing System.Data.Common;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.Options;\r\nusing Microsoft.Data.SqlClient;\r\n.
        /// </summary>
        public static string RepositoryUsingAdo {
            get {
                return ResourceManager.GetString("RepositoryUsingAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Add({className} entity)\r\n\t\t{\r\n\t\t\t_repository.Add(entity);\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceAdd {
            get {
                return ResourceManager.GetString("ServiceAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t}\r\n.
        /// </summary>
        public static string ServiceClassEnd {
            get {
                return ResourceManager.GetString("ServiceClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class {className}Service : I{className}Service\r\n\t{\r\n.
        /// </summary>
        public static string ServiceClassStart {
            get {
                return ResourceManager.GetString("ServiceClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\tprivate readonly I{className}Repository _repository;\r\n\r\n\t\tpublic {className}Service(I{className}Repository repository)\r\n\t\t{\r\n\t\t\t_repository = repository;\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceConstructor {
            get {
                return ResourceManager.GetString("ServiceConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Delete(int {IdName})\r\n\t\t{\r\n\t\t\t_repository.Delete({IdName});\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceDelete {
            get {
                return ResourceManager.GetString("ServiceDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic IEnumerable&lt;{className}&gt; GetAll()\r\n\t\t{\r\n\t\t\treturn _repository.GetAll();\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceGetAll {
            get {
                return ResourceManager.GetString("ServiceGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic {className} GetById(int {IdName})\r\n\t\t{\r\n\t\t\treturn _repository.GetById({IdName});\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceGetById {
            get {
                return ResourceManager.GetString("ServiceGetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic List&lt;Response{className}&gt; Get{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\treturn _repository.Get{className}Async({className});\r\n\t\t}.
        /// </summary>
        public static string ServiceGetMethod {
            get {
                return ResourceManager.GetString("ServiceGetMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic Response{className} Get{className}Async(Request{className} request)\r\n\t{\r\n\t\t// Method implementation\r\n\t}\r\n.
        /// </summary>
        public static string ServiceGetMethodAdo {
            get {
                return ResourceManager.GetString("ServiceGetMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// Get\r\n\t\t// GetAll\r\n\t\t// Insert \r\n\t\t// Update\r\n\t\t// Delete\r\n.
        /// </summary>
        public static string ServiceMethodComments {
            get {
                return ResourceManager.GetString("ServiceMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Infrastructure.Service\r\n{.
        /// </summary>
        public static string ServiceNamespace {
            get {
                return ResourceManager.GetString("ServiceNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }\r\n.
        /// </summary>
        public static string ServiceNamespaceEnd {
            get {
                return ResourceManager.GetString("ServiceNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic Response{className} Post{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\treturn _repository.Post{className}Async({className});\r\n\t\t}.
        /// </summary>
        public static string ServicePostMethod {
            get {
                return ResourceManager.GetString("ServicePostMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic int Post{className}Async(Request{className} {className})\r\n\t\t{\r\n\t\t\treturn _repository.Post{className}Async({className});\r\n\t\t}.
        /// </summary>
        public static string ServicePostMethodAdo {
            get {
                return ResourceManager.GetString("ServicePostMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class usp{className}Service : Iusp{className}Service\r\n\t{\r\n.
        ///   Looks up a localized string similar to \tpublic class {className}Service : I{className}Service\r\n\t{\r\n.
        /// </summary>
        public static string ServiceSPClassStart {
            get {
                return ResourceManager.GetString("ServiceSPClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\tprivate readonly I{className}Repository _repository;\r\n\r\n\t\tpublic {className}Service(I{className}Repository repository)\r\n\t\t{\r\n\t\t\t_repository = repository;\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceSPConstructor {
            get {
                return ResourceManager.GetString("ServiceSPConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \r\n\t\t// GET/GETALL\r\n\t\t// INSERT/UPDATE\r\n.
        /// </summary>
        public static string ServiceSPMethodComments {
            get {
                return ResourceManager.GetString("ServiceSPMethodComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Update({className} entity)\r\n\t\t{\r\n\t\t\t_repository.Update(entity);\r\n\t\t}\r\n.
        /// </summary>
        public static string ServiceUpdate {
            get {
                return ResourceManager.GetString("ServiceUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {apiName}.Application.IRepository;\r\nusing {apiName}.Application.IService;\r\n.
        /// </summary>
        public static string ServiceUsing {
            get {
                return ResourceManager.GetString("ServiceUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic DbSet&lt;Response{className}&gt; {className}Set { get; set; }\r\n.
        /// </summary>
        public static string SpDBContext {
            get {
                return ResourceManager.GetString("SpDBContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\t\t\tvar {IdName} = new SqlParameter(&quot;@{IdName}&quot;, {className}.{IdName});\r\n.
        /// </summary>
        public static string SPInput {
            get {
                return ResourceManager.GetString("SPInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\tservices.AddScoped&lt;I{className}Repository, {className}Repository&gt;();\r\n\t\t\tservices.AddScoped&lt;I{className}Service, {className}Service &gt;();.
        /// </summary>
        public static string SPStartupForRepositoriesAndServices {
            get {
                return ResourceManager.GetString("SPStartupForRepositoriesAndServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }\r\n}\r\n.
        /// </summary>
        public static string SqlHelperClassEnd {
            get {
                return ResourceManager.GetString("SqlHelperClassEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static class SqlHelper\r\n{\r\n    private static string connectionString = string.Empty;\r\n.
        /// </summary>
        public static string SqlHelperClassStart {
            get {
                return ResourceManager.GetString("SqlHelperClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static List&lt;T&gt; ConvertDataTableToList&lt;T&gt;(DataTable dt)\r\n{\r\n\tList&lt;T&gt; data = new List&lt;T&gt;();\r\n\tType temp = typeof(T);\r\n\tPropertyInfo[] props = temp.GetProperties();\r\n\tstring[] propsName = new string[props.Length];\r\n\tint i = 0;\r\n\tforeach (PropertyInfo pro in props)\r\n\t{\r\n\t\tvar pInfo = typeof(T).GetProperty(pro.Name).GetCustomAttribute&lt;ColumnAttribute&gt;();\r\n\t\tpropsName[i] = (pInfo != null &amp;&amp; !string.IsNullOrEmpty(pInfo.Name)) ? pInfo.Name : pro.Name;\r\n\t\ti++;\r\n\t}\r\n\tfo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlHelperConvertDataTableToList {
            get {
                return ResourceManager.GetString("SqlHelperConvertDataTableToList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static Dictionary&lt;string, dynamic&gt; ExecuteNonQuery&lt;T&gt;(string query, List&lt;DbParameter&gt; dbParams, ExecutionType executionType, int timeOut = 0)\r\nwhere T : IDbConnection, new()\r\n{\r\n\tDictionary&lt;string, dynamic&gt; result = new Dictionary&lt;string, dynamic&gt;();\r\n\tusing (var sqlConnection = new T())\r\n\t{\r\n\t\tsqlConnection.ConnectionString = connectionString;\r\n\t\tusing (var sqlCommand = sqlConnection.CreateCommand())\r\n\t\t{\r\n\t\t\tsqlCommand.CommandText = query;\r\n\t\t\t// Set command type  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlHelperExecuteNonQuery {
            get {
                return ResourceManager.GetString("SqlHelperExecuteNonQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static DataTable ExecuteSelect&lt;T&gt;(string query, List&lt;DbParameter&gt; sqlParams, ExecutionType executionType)\r\nwhere T : IDbConnection, new()\r\n{\r\n\tusing (var sqlConnection = new T())\r\n\t{\r\n\t\tsqlConnection.ConnectionString = connectionString;\r\n\t\tusing (var sqlCommand = sqlConnection.CreateCommand())\r\n\t\t{\r\n\t\t\tsqlCommand.CommandText = query;\r\n\t\t\t// Set command type based on executionType\r\n\t\t\tsqlCommand.CommandType = executionType == ExecutionType.Procedure ? CommandType.S [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlHelperExecuteSelect {
            get {
                return ResourceManager.GetString("SqlHelperExecuteSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public enum ExecutionType\r\n{\r\n\t/// &lt;summary&gt;Query&lt;/summary&gt;\r\n\tQuery,\r\n\r\n\t/// &lt;summary&gt;Procedure&lt;/summary&gt;\r\n\tProcedure,\r\n}\r\n.
        /// </summary>
        public static string SqlHelperExecutionType {
            get {
                return ResourceManager.GetString("SqlHelperExecutionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static T GetItem&lt;T&gt;(DataRow dr, PropertyInfo[] props, string[] propsName)\r\n{\r\n\tT obj = Activator.CreateInstance&lt;T&gt;();\r\n\tforeach (DataColumn column in dr.Table.Columns)\r\n\t{\r\n\t\tint i = 0;\r\n\t\tforeach (PropertyInfo pro in props)\r\n\t\t{\r\n\t\t\tif (string.Compare(propsName[i], column.ColumnName, true, CultureInfo.CurrentCulture) == 0)\r\n\t\t\t{\r\n\t\t\t\tif (dr[column.ColumnName] != DBNull.Value)\r\n\t\t\t\t{\r\n\t\t\t\t\tpro.SetValue(obj, dr[column.ColumnName], null);\r\n\t\t\t\t} [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlHelperGetItem {
            get {
                return ResourceManager.GetString("SqlHelperGetItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.Infrastructure.DataAccess\r\n{.
        /// </summary>
        public static string SqlHelperNamespace {
            get {
                return ResourceManager.GetString("SqlHelperNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static void SetConnectionString(string value)\r\n{\r\n\tconnectionString = value;\r\n}\r\n.
        /// </summary>
        public static string SqlHelperSetConnectionString {
            get {
                return ResourceManager.GetString("SqlHelperSetConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel.DataAnnotations.Schema;\r\nusing System.Data;\r\nusing System.Data.Common;\r\nusing System.Globalization;\r\nusing System.Reflection;.
        /// </summary>
        public static string SqlHelperUsings {
            get {
                return ResourceManager.GetString("SqlHelperUsings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tprivate void AddCors(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddCors(options =&gt;\r\n\t\t\t{\r\r\t\t\t\toptions.AddPolicy(name: \&quot;AllowAll\&quot;, builder =&gt; builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader());\r\n\t\t\t});\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupAddCorsMethod {
            get {
                return ResourceManager.GetString("StartupAddCorsMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \tpublic class Startup\r\n\t{\r\n.
        /// </summary>
        public static string StartupClassStart {
            get {
                return ResourceManager.GetString("StartupClassStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tprivate void ConfigureHealthCheck(IApplicationBuilder app)\r\n\t\t{\r\n\t\t\t// Add health check configurations here.\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupConfigureHealthCheckMethod {
            get {
                return ResourceManager.GetString("StartupConfigureHealthCheckMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n\t\t{\r\n\t\t\tapp.UseSwagger();\r\n\t\t\tapp.UseSwaggerUI(c =&gt; c.SwaggerEndpoint(\&quot;/swagger/v1/swagger.json\&quot;, $\&quot;{apiName} v1\&quot;));\r\n\t\t\tapp.UseHttpsRedirection().UseRouting().UseCors(\&quot;AllowAll\&quot;).UseAuthorization().UseEndpoints(endpoints =&gt; endpoints.MapControllers());\r\n\t\t\tConfigureHealthCheck(app);\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupConfigureMethod {
            get {
                return ResourceManager.GetString("StartupConfigureMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\r\n\t\t\toptions.UseSqlServer(Configuration.GetConnectionString(\&quot;DefaultConnection\&quot;)));\r\n\t\t\tRegisterDependencies(services);\r\n\t\t\tservices.AddControllers();\r\n\t\t\tservices.AddSwaggerGen(c =&gt; c.SwaggerDoc(\&quot;v1\&quot;, new OpenApiInfo { Title = $\&quot;{apiName}\&quot;, Version = \&quot;v1\&quot; }));\r\n\t\t\tAddCors(services);\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupConfigureServicesMethod {
            get {
                return ResourceManager.GetString("StartupConfigureServicesMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tRegisterDependencies(services);\r\n\t\t\tservices.AddControllers();\r\n\t\t\tservices.AddSwaggerGen(c =&gt; c.SwaggerDoc(\&quot;v1\&quot;, new OpenApiInfo { Title = $\&quot;{apiName}\&quot;, Version = \&quot;v1\&quot; }));\r\n\t\t\tservices.Configure&lt;ConnectionStrings&gt;(Configuration.GetSection(&quot;ConnectionStrings&quot;));\r\n\t\t\tAddCors(services);\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupConfigureServicesMethodAdo {
            get {
                return ResourceManager.GetString("StartupConfigureServicesMethodAdo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tprivate void ConfigureSwagger(IApplicationBuilder app)\r\n\t\t{\r\n\t\t\tapp.UseSwagger();\r\n\t\t\tapp.UseSwaggerUI(c =&gt; \r\n\t\t\t{\r\n\t\t\t\tc.SwaggerEndpoint(\&quot;/swagger/v1/swagger.json\&quot;, $\&quot;{apiName} v1\&quot;);\r\n\t\t\t});\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupConfigureSwaggerMethod {
            get {
                return ResourceManager.GetString("StartupConfigureSwaggerMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tpublic Startup(IConfiguration configuration) =&gt; Configuration = configuration;\r\n\t\tpublic IConfiguration Configuration { get; }\r\n.
        /// </summary>
        public static string StartupConstructor {
            get {
                return ResourceManager.GetString("StartupConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\t\tservices.AddScoped&lt;I{className}Repository, {className}Repository&gt;();\r\n\t\t\tservices.AddScoped&lt;I{className}Service, {className}Service &gt;();.
        /// </summary>
        public static string StartupForRepositoriesAndServices {
            get {
                return ResourceManager.GetString("StartupForRepositoriesAndServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t}\r\n}\r\n.
        /// </summary>
        public static string StartupNamespaceEnd {
            get {
                return ResourceManager.GetString("StartupNamespaceEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {apiName}.WebAPI\r\n{\r\n.
        /// </summary>
        public static string StartupNamespaceStart {
            get {
                return ResourceManager.GetString("StartupNamespaceStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t\tprivate void RegisterDependencies(IServiceCollection services)\r\n\t\t{\r\n// Add dependency injection registrations here.\r\n\t\t}\r\n.
        /// </summary>
        public static string StartupRegisterDependenciesMethod {
            get {
                return ResourceManager.GetString("StartupRegisterDependenciesMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {apiName}.Application.IRepository;\r\nusing {apiName}.Application.IService;\r\nusing {apiName}.Infrastructure.Data;\r\nusing {apiName}.Infrastructure.Repository;\r\nusing {apiName}.Infrastructure.Service;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.OpenApi.Models;\r\n.
        /// </summary>
        public static string StartupUsing {
            get {
                return ResourceManager.GetString("StartupUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {apiName}.Application.IRepository;\r\nusing {apiName}.Application.IService;\r\nusing {apiName}.Infrastructure.Repository;\r\nusing {apiName}.Infrastructure.Service;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.OpenApi.Models;\r\n.
        /// </summary>
        public static string StartupUsingAdo {
            get {
                return ResourceManager.GetString("StartupUsingAdo", resourceCulture);
            }
        }
    }
}
